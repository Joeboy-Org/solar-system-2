name: Solar System Workflow

on:
     workflow_dispatch:
     push:
        branches:
            - main
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            # max-parallel: 1
            matrix:
                os: [ubuntu-latest, macos-latest]
                node-version: [18, 20]
                exclude:
                  - node-version: 18
                    os: macos-latest
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            
            - name: Set Node JS Version - ${{matrix.node-version}}
              uses: actions/setup-node@v3
              with:
                node-version: ${{matrix.node-version}}

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
            - name: Install Dependencies
              run: npm install

            - name: Unit Testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: Archive Test Results
              if: always()
              uses: actions/upload-artifact@v3
              with:
                name: Mocha-Test-Results
                path: test-results.xml
                ## overwrite: true

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            
            - name: Set Node JS Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            
            - name: Cache NPM dependencies    #cache
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
            - name: Install Dependencies
              run: npm install

            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Archive Test Results
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5

    docker:
          name: Containerization
          needs: [unit-testing, code-coverage]
          runs-on: ubuntu-latest
          steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ var.DOCKERHUB_USERNAME }}
                password: ${{ var.DOCKERHUB_PASSWORD }}

